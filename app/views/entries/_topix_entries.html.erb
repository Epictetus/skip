<% title ||= "" %>
<% entries ||= [] -%>
<% user_unreadings ||= [] -%>
<% symbol2name_hash ||= nil -%>
<% with_checkable_read ||= false -%>

<div class="topix_entries_wrapper">
  <% unless title.blank? -%>
    <h2 class="title"><%= icon_tag('asterisk_orange') %><%= h title %></h2>
  <% end -%>
  <% unless entries.empty? -%>
    <table class="topix_entries">
      <% if with_checkable_read -%>
        <col class="col25" />
      <% end -%>
      <col class="col25" />
      <!--<col class="col25" />-->
      <col />
      <col class="col75" />
      <tbody>
        <% entries.each do |entry| -%>
          <% entry_infos = get_entry_infos(entry) -%>
          <tr class="<%= detect_entry_gb_class entry -%>">
            <% if with_checkable_read -%>
            <td class="read_state"><%= check_box_tag("message_#{entry.id}", "true", !user_unreadings[entry.id], {:class => "read_state_checkbox"}) %></td>
            <% end -%>
            <td class="entry_icon"><%= entry_icon entry %><br /><%= get_publication_type_icon(entry) %></td>
            <!-- TODO:デザイン検討後、削除するかどうか決定する -->
            <!--<td class="publication_state"><%#= get_publication_type_icon(entry) %></td>-->
            <td class="entry_outline">
              <%= entry_link_to(entry, {}, {:title => entry_infos}) %>
              <%= content_tag :span, "["+_('Resolved')+"]", :class => 'question_state' if entry.hide %>
              <span class="tags"<%= entry_tag_search_links_tag(entry.category, :max => 3) %></span>
              <span class="small_text">
              <% if symbol2name_hash -%>
                <span class="infos"><% if entry.owner_is_group? -%>at <% else %>by <% end -%></span>
                <%= symbol_link_to(entry.symbol, symbol2name_hash[entry.symbol]) %>
              <% end -%>
              <% if entry.owner_is_group? -%>
                <span class="small_text infos"><%= user_link_to(entry.user, :with_prefix => true) %></span>
              <% end -%>
              <br />
              <span class="infos"><%= entry_infos -%></span>
            </td>
            <td class="date"><%=h entry.date.strftime(_("%B %d %Y")) %></td>
          </tr>
        <% end -%>
      </tbody>
    </table>
  <% end %>
</div>
<% if with_checkable_read -%>
  <% content_for :javascript_initializers do -%>
  // チェックボックスをクリックすると既読未読が変更される
  $j('.read_state_checkbox').live('click', function(){
    entryId = this.id.split('_')[1];
    changeReadState(entryId, this.checked, $j('input[name=authenticity_token]').val());
  });

  <%# 呼び出し元で#check_all_linkというdom要素があれば動作 -%>
  <%# FIXME Issue:811 1リクエストで未読既読の変更が出来るようにする -%>
  // チェックされていない記事をすべて既読にする
  $j('#check_all_link').live('click', function(){
    $j('.topix_entries :checkbox').each(function(){
      if(!this.checked){
        entryId = this.id.split('_')[1];
        changeReadState(entryId, true, $j('input[name=authenticity_token]').val());
        this.checked = true;
      }
    });
  });

  <%# 呼び出し元で#uncheck_all_linkというdom要素があれば動作 -%>
  <%# FIXME Issue:811 1リクエストで未読既読の変更が出来るようにする -%>
  // チェックされている記事をすべて未読にする
  $j('#uncheck_all_link').live('click', function(){
    $j('.topix_entries :checked').each(function(){
      entryId = this.id.split('_')[1];
      changeReadState(entryId, false, $j('input[name=authenticity_token]').val());
      this.checked = false;
    });
  });
  <% end -%>
<% end -%>
