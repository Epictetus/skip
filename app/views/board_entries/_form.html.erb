<% content_for :stylesheet do -%>
<style type="text/css">
table {
  table-layout: auto;
}
table.input_table textarea {
  width: 100%;
}
div.input_line {
  border-bottom: 1px dotted silver;
  margin-bottom: 2px;
  padding-bottom: 2px;
}
div.input_line textarea {
  width: 98%;
}
</style>
<% end -%>

<%= template_error_messages_for 'board_entry' %>

<%= form.hidden_field :entry_type %>
<%= form.hidden_field :lock_version %>

<div class="input_line">
  <div class="input_label"><%= form.label :aim_type, _('Types') %></div>
  <% aim_types = BoardEntry.enable_aim_types(current_tenant).map{|type| [s_("BoardEntry|Aim type|Desc|#{type}"), type]} -%>
  <div class="input_value"><%= form.select :aim_type, options_for_select(aim_types, form.object.aim_type) %></div>
  <div class="clear_left"></div>
</div>

<div class="input_line">
  <div class="input_label"><%= form.label(:category, _('Tags')) -%></div>
  <div class="input_value"><%= form.text_field :category, :size => '60' %>
    <div id="category_box" style="display:none;">
      <div id="candidates_list"><p><%= _('Multiple values can be given in foo,bar format')%></p></div>
      <div style="font-size:10pt; font-weight:bold;"><%= _('Your tags: ')%></div><div id="tags_list" style="margin-bottom:5px;"></div>
      <div style="font-size:10pt; font-weight:bold;"><%= _('Recommended tags: ')%></div><div id="std_tags_list" style="margin-bottom:5px;"></div>
      <div style="font-size:10pt; font-weight:bold;"><%= _('Recent tags of other users: ')%></div><div id="user_tags_list" style="margin-bottom:5px;"></div>
    </div>
  </div>
  <div style="clear: left"></div>
</div>

<div class="input_line">
  <div class="input_label"><%= form.label :title %></div>
  <div class="input_value"><%= form.text_field :title, :size => 60 %></div>
  <div style="clear: left"></div>
</div>

<div class="input_line">
  <div class="input_label"><%= form.label :contents %></div>
  <div class="input_value" style="height: 2em;">
    <%= form.radio_button(:editor_mode, "richtext") + form.label(:editor_mode_richtext, _('Rich Text')) %>
    <%= form.radio_button(:editor_mode, "hiki") + form.label(:editor_mode_hiki, _('Wiki text')) %>
    <span id="share_file_trigger" class="pointer link"><span class="ss_sprite ss_attach">&nbsp;</span><%= _('Insert file or embed in text body') %></span>
  </div>

  <div id="contents_richtext_space" class="richtext" style="display: none;">
    <% form.object.contents_richtext = sanitize_and_unescape_for_richtext(form.object.contents_richtext) -%>
    <%= form.text_area :contents_richtext, :cols => 90, :rows => 20 %>
  </div>
  <div id="contents_hiki_space" style="display: none;">
    <%= link_to_hiki_help %> <a href="#" id="hiki_preview_link"><%= _('[See preview]')%></a>
    <%= form.text_area :contents_hiki, :cols => 90, :rows => 20 %>
  </div>
</div>

<div class="input_line input_option invisible">
  <div class="input_label" style="height: 30px;"><%= _('Date')%></div>
  <div class="input_value">
    <p><%= form.datetime_select :date, :use_month_numbers => true -%></p>
    <p><a href="#" onclick="setCurrentDatetime('board_entry', 'date');return false;"><%= _('[Set current time]')%></a>
      <%= form.check_box :ignore_times %><%= form.label :ignore_times, _('Hide Time') %></p>
  </div>
  <div style="clear: left"></div>
</div>

<div class="input_line" id="show_option">
<p><a href="#" id="show_option_link"><%= _('Show Option') %></a></p>
</div>

<div class="input_line input_option invisible">
  <div class="input_label" style="height: 3em;" id="input_label_publication"><%= _('Privacy Settings')%></div>
  <div class="input_value" id="input_value_publication"><table><tr><td>
    <% display_type = (form.object.owner_is_public? ? "" : "none") %>
    <span style="display:<%= display_type %>">
      <%= form.radio_button :publication_type, "public" %><%= form.label :publication_type_public, _('Open to All') %>
    </span>
    <%= form.radio_button :publication_type, "private" %><%= form.label :publication_type_private, form.object.diary? ? _("Owner Only") : _("Members Only") %>
    </td></tr></table>
  </div>
  <div style="clear: left"></div>
</div>

<div class="input_line input_option invisible">
  <div class="input_label" style="height: 3em;"><%= label_tag("trackbacks", _('Topic Entry')) %></div>
  <div class="input_value">
    <div id="option_space">
      <p><%= text_field_tag 'trackbacks', params[:trackbacks], {:size => 60} %></p>
      <p><%= _('(Provide page IDs in comma separated format. e.g. 1123,1124)')%></p>
    </div>
  </div>
  <div style="clear: left"></div>
</div>

<% ckeditor 'board_entry_contents_richtext', 'toolbar' => "EntrySimple" %>
<% content_for :javascript_initializers do -%>
  <% categories_hash = BoardEntry.categories_hash(current_user) -%>
  var setupTagComplete = function() {
      var tags = new Array(<%= categories_hash[:mine].map{|str| ("'#{str}'")}.join(',') %>);
      var stdTags = new Array(<%= categories_hash[:standard].map{|str| ("'#{str}'")}.join(',') %>);
      var userTags = new Array(<%= categories_hash[:user].map{|str| ("'#{str}'")}.join(',') %>);

      $j('#tags_list').append(createTagsLink(tags));
      $j('#std_tags_list').append(createTagsLink(stdTags));
      $j('#user_tags_list').append(createTagsLink(userTags));

      // タグ処理
      $j('#board_entry_category').jTagging($j('#tags_list'));
      $j('#board_entry_category').jTagging($j('#std_tags_list'));
      $j('#board_entry_category').jTagging($j('#user_tags_list'));
  };
  setupTagComplete();

  // 入力フォームのチェック
  $j('.board_entry_form')
  .submit(function (){
      var tb_array = $j('#trackbacks').val().split(',');

      for(i=0; i < tb_array.length; i++){
          var tb = Trim(tb_array[i]);
          if(tb != ""){
              if (isNaN(tb)){
                  alert('<%= _('Illegal format in "Topic entry". List the page IDs and separate each other by commas.')%>');
                  return false;
              }
          }
      }

      if ($j('#board_entry_publication_type_public:checked').size() > 0 && $j('#board_entry_send_mail:checked').size() > 0) {
          if (!confirm('<%= _('Are you sure to send email to all users?') %>'))
              return false;
      }

      // 作成or更新によるページ遷移は警告しない
      $j(window).unbind('beforeunload');
  });
  var Trim = function(str){
      str = str.replace(/^[ 　]+/,"");
      str = str.replace(/[ 　]+$/,"");
      return(str);
  }

  <% unless Admin::Setting.enable_send_email_to_all_users(current_tenant) -%>
  // メール送信チェックボックスの表示制御
  var toggleSendMail = function() {
  <% if form.object.diary? -%>
    $j('span.send_mail_field').hide();
    $j('#board_entry_send_mail').attr('checked', false);
  <% else -%>
    if ($j('#board_entry_publication_type_public:checked').length > 0) {
      $j('span.send_mail_field').hide();
      $j('#board_entry_send_mail').attr('checked', false);
    } else {
      $j('span.send_mail_field').show();
    }
  <% end -%>
  };
  toggleSendMail();
  <% end -%>

  var changePublicationType = function() {
    <% unless Admin::Setting.enable_send_email_to_all_users(current_tenant) -%>
      toggleSendMail();
    <% end -%>

    $j('#publication_status').css('color', '#555');
    if ($j('#board_entry_publication_type_protected:checked').length > 0)
      $j('#publication_status').text($j('label[for=board_entry_publication_type_protected]').text());
    if ($j('#board_entry_publication_type_private:checked').length > 0)
      $j('#publication_status').text($j('label[for=board_entry_publication_type_private]').text());
    if ($j('#board_entry_publication_type_public:checked').length > 0) {
      $j('#publication_status').text($j('label[for=board_entry_publication_type_public]').text());
      <% if @board_entry.owner_is_group? && @board_entry.owner.default_publication_type == 'private' -%>
        $j('#publication_status').css('color', 'red');
      <% end -%>
    }
  };
  changePublicationType();

  $j('#board_entry_publication_type_public, #board_entry_publication_type_private').live('click', function(){
    changePublicationType();
  });

  // タグsuggestのスライド表示
  $j('#board_entry_category')
  .focus(function(){
      showCategoryBox();
  });
  $j('#board_entry_title, #contents_hiki, #contents_richtext')
  .focus(function(){
      hideCategoryBox();
  });

  var changeEditorMode = function(){
      $j('#contents_hiki_space, #contents_richtext_space, .hiki_support').hide();

      if($j('#board_entry_editor_mode_richtext:checked').length > 0){
          $j('#contents_richtext_space').show();
          $j('#contents_richtext').focus();
      } else if($j('#board_entry_editor_mode_hiki:checked').length > 0) {
          $j('#contents_hiki_space, .hiki_support').show();
          $j('#contents_hiki').focus();
      }
  }

  changeEditorMode();

  // オプション入力項目の表示制御
  $j('#show_option_link')
  .click(function() {
      $j('div.input_option').show();
      $j('#show_option').hide();
      return false;
  });

  var isShowOptions = function() {
      var isNewRecord = <%= !!(form.object.new_record?) %>;
      return !isNewRecord || $j('#trackbacks').val() != '';
  };

  if(isShowOptions())
      $j('#show_option_link').click();

  $j(window).bind('beforeunload', function(e){
    return e.originalEvent.returnValue = '<%= _('All changes will be discarded if you navigate away from this page.') %>';
  });

  $j('#board_entry_editor_mode_hiki, #board_entry_editor_mode_richtext')
  .click(function(){
      changeEditorMode();
  });

  // プレビュー表示用ボタン
  var url = '<%= polymorphic_url([current_tenant, current_target_owner, :board_entries], :action => :preview) %>';
  $j("#hiki_preview_link")
  .click(function(){
      jsonData = $j.grep($j('#hiki_preview_link').closest('form').serializeArray(), function(v, i){
          // PUTリクエストしないように削除
          return (v['name'] != '_method');
      });
      $j.ajax({
          type: 'POST',
          url: url,
          data: jsonData,
          success: function(msg) {
              $j('#preview').html(msg);
              $j('#preview-win')
              .css('width',600)
              .fadeIn();
          }
      });
      return false;
  });
<% end -%>
