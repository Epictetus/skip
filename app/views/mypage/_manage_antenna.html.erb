<style type="text/css">
ul {
  list-style-type: none;
}
ul#antennas_list li.dragenter {
  background-color: yellow;
  *z-index: -1; /* スタックコンテキストの問題を回避する（for IE）*/
}
</style>

<div id="contents_container">

<div id="contents_left">

<%= render :partial => "manage_menu", :locals => { :selected_menu => @menu } %>

</div><!-- contents_left -->

<div id="contents_right">

<div class="desc"><p><%= _("You can manage antennas for the blogs you follow etc.<br/>\nYou can edit the name of the antenna by clicking on it.<br/>\nThe list of antennas%{transmi} can be reordered by drag &amp; drop.<br/>\nYou can also move the items between antennas it by dragging the %{report_user} in the condition area.") % {:transmit => icon_tag('transmit'), :report_user => icon_tag('report_user')}%></p></div>

<div class="edit_form_space"><!-- 編集領域  -->

  <div id="antennas_list_container">
    <%= render :partial => 'antennas', :object => @antennas, :locals => { :for_manage => true } -%>
  </div>

  <div style="border: 1px solid silver; background-color: #f0f0ff; margin-top: 5px;">
    <p><%= icon_tag 'transmit_add' -%><%= _('Add Antenna')%>
    <input type="edit" size="20" id="add_antenna_name" />
    <input type="button" value="<%= _('Add')%>" id="add_antenna_btn" /></p>
  </div>

</div><!-- end of 編集領域 -->

</div><!-- contents_right -->

<div id="contents_bottom">
</div><!-- contents_bottom -->

</div><!-- contents_container -->
<%= hidden_field_tag("authenticity_token", form_authenticity_token) %>

<%= skip_jquery_include_tag 'ui.core' %>
<%= skip_jquery_include_tag 'ui.draggable' %>
<%= skip_jquery_include_tag 'ui.droppable' %>
<%= skip_jquery_include_tag 'ui.sortable' %>
<script type="text/javascript">
$j(function() {
    // アンテナの追加
    var setupAddAntennaBtn = function() {
      $j('#add_antenna_btn')
      .click(function() {
          var antenna_name = $j('#add_antenna_name').val();
          if (antenna_name == '') {
              alert('<%= _("Antenna name is mandatory.")%>');
              return false;
          }
          if (antenna_name.length > 10) {
              alert('<%= _("Antenna name accepts 10 or less characters only.")%>');
              return false;
          }
          var add_antenna_url = relative_url_root + "/mypage/add_antenna";
          $j.ajax({
              type: 'POST',
              url: add_antenna_url,
              data: { name: antenna_name, authenticity_token: $j('#authenticity_token').val() },
              success: function(request) {
                  $j('#add_antenna_name').val('');
                  $j('#antennas_list_container').html(request).highlight();
              },
              error: function(event){
                  alert("<%= _('Communication failure.')%>");
              },
              complete: function(request) {
                  setupDeleteAntennaLink();
                  setupDeleteAntennaItemLink();
                  setupSortableAntenna();
                  setupDoraggableAntennaItem();
              }
          });
          return false;
      });
    };
    setupAddAntennaBtn();

    // アンテナの削除
    var setupDeleteAntennaLink = function() {
        $j('.delete_antenna_link')
        .click(function() {
              if (!confirm('<%= _("Are you sure to delete?")%>')) {
                  return;
              }
              var antenna_id = this.id.split('_')[3];
              var delete_antenna_url = relative_url_root + "/mypage/delete_antenna";
              $j.ajax({
                  type: 'POST',
                  url: delete_antenna_url,
                  data: { antenna_id: antenna_id, authenticity_token: $j('#authenticity_token').val() },
                  success: function(request) {
                      $j('#antennas_list_container').html(request).highlight();
                  },
                  error: function(event){
                      alert("<%= _('Communication failure.')%>");
                  },
                  complete: function(request) {
                      setupDeleteAntennaLink();
                      setupDeleteAntennaItemLink();
                      setupSortableAntenna();
                      setupDoraggableAntennaItem();
                  }
              });
              return false;
        });
    };
    setupDeleteAntennaLink();

    // アンテナアイテムの削除
    var setupDeleteAntennaItemLink = function() {
        $j('.delete_antenna_item_link')
        .click(function() {
            if (!confirm('<%= _("Are you sure to delete?")%>')) {
                return;
            }
            var antenna_id = this.id.split('_')[4];
            var antenna_item_id = this.id.split('_')[5];
            var delete_antenna_item_url = relative_url_root + "/mypage/delete_antenna_item";
            $j.ajax({
                type: 'POST',
                url: delete_antenna_item_url,
                data: { antenna_id: antenna_id,
                        antenna_item_id: antenna_item_id,
                        authenticity_token: $j('#authenticity_token').val() },
                success: function(request) {
                    $j('#antennas_list_container').html(request).highlight();
                },
                error: function(event){
                    alert("<%= _('Communication failure.')%>");
                },
                complete: function(request) {
                    setupDeleteAntennaLink();
                    setupDeleteAntennaItemLink();
                    setupSortableAntenna();
                    setupDoraggableAntennaItem();
                }
            });
        });
    };
    setupDeleteAntennaItemLink();

    // アンテナのソート
    var setupSortableAntenna = function() {
        $j('#antennas_list')
        .sortable({
            axis: 'y',
            update: function(ev, ui) {
                // ソートされた先の位置
                var target_pos = 0;
                var source_antenna_id = ui.item.attr('id').split('_')[1];
                var array = $j('#antennas_list > li')
                // length - 1 する理由はui末尾に一時的に追加されるli要素を対象外としたいので。
                for(i = 0; i < array.length - 1; i++) {
                    if( array[i].id == ui.item.attr('id')) {
                        target_pos = i + 1;
                    }
                }
                var url = relative_url_root + '/mypage/sort_antenna'
                $j.ajax({
                    type: 'POST',
                    url: url,
                    data: { source_antenna_id: source_antenna_id, target_pos: target_pos, authenticity_token: $j('#authenticity_token').val() },
                    error: function(event){
                        alert("<%= _('Communication failure.')%>");
                    },
                    success: function(request) {
                        $j('#antennas_list_container').highlight();
                    }
                });
            }
        });
    };
    setupSortableAntenna();

    // アンテナアイテムの張替え
    var setupDoraggableAntennaItem = function() {
        $j('.antenna')
        .droppable({
            hoverclass: "dragenter",
            accept: '.antenna_item',
            drop: function(ev, ui) {
                      var antenna_id = this.id.split('_')[1];
                      var antenna_item_id = ui.draggable.attr('id').split('_')[2];
                      $j(this).children('#antenna_items_list').append(ui.draggable);
                      var url = relative_url_root + '/mypage/move_antenna_item'
                      $j.ajax({
                          type: 'POST',
                          url: url,
                          data: { antenna_id: antenna_id, antenna_item_id: antenna_item_id, authenticity_token: $j('#authenticity_token').val() },
                          error: function(event){
                              alert("<%= _('Communication failure.')%>");
                          },
                          success: function(request) {
                              $j('#antennas_list_container').highlight();
                          }
                      });
                  }
        });
        $j('.antenna_item').draggable({revert: true});
    };
    setupDoraggableAntennaItem();
});
</script>
