<style type="text/css">
ul {
  list-style-type: none;
}
ul#antennas_list li.dragenter {
  background-color: yellow;
  *z-index: -1; /* スタックコンテキストの問題を回避する（for IE）*/
}
</style>

<div id="contents_container">

<div id="contents_left">

<%= render :partial => "manage_menu", :locals => { :selected_menu => @menu } %>

</div><!-- contents_left -->

<div id="contents_right">

<div class="desc"><p>ここでは注目するブログなどのアンテナを整備することが可能です。<br/>
アンテナの名称は、クリックすると編集することが可能です。<br/>
アンテナの一覧<%= icon_tag 'transmit' -%>は、上下にドラッグ＆ドロップすることで並び替えをすることができます。<br/>
また、条件部分の<%= icon_tag 'report_user' -%>を掴んで、アンテナにドロップすれば、移動させることもできます。</p></div>

<div class="edit_form_space"><!-- 編集領域  -->

  <div id="antennas_list_container">
    <%= render :partial => 'antennas', :object => @antennas, :locals => { :for_manage => true } -%>
  </div>

  <div style="border: 1px solid silver; background-color: #f0f0ff; margin-top: 5px;">
    <p><%= icon_tag 'transmit_add' -%>アンテナの追加
    <input type="edit" size="20" id="add_antenna_name" />
    <input type="button" value="追加" id="add_antenna_btn" /></p>
  </div>

</div><!-- end of 編集領域 -->

</div><!-- contents_right -->

<div id="contents_bottom">
</div><!-- contents_bottom -->

</div><!-- contents_container -->
<%= hidden_field_tag("authenticity_token", form_authenticity_token) %>

<script type="text/javascript">
$j(function() {
    // アンテナの追加
    var setupAddAntennaBtn = function() {
      $j('#add_antenna_btn')
      .click(function() {
          var antenna_name = $j('#add_antenna_name').val();
          if (antenna_name == '') {
              alert('アンテナ名は必須です。');
              return false;
          }
          if (antenna_name.length > 10) {
              alert('アンテナ名は10文字以内で入力して下さい。');
              return false;
          }
          var add_antenna_url = relative_url_root + "/mypage/add_antenna";
          $j.ajax({
              type: 'POST',
              url: add_antenna_url,
              data: { name: antenna_name, authenticity_token: $j('#authenticity_token').val() },
              success: function(request) {
                  $j('#add_antenna_name').val('');
                  $j('#antennas_list_container').html(request).highlight();
              },
              error: function(event){
                  alert("通信に失敗しました");
              },
              complete: function(request) {
                  setupDeleteAntennaLink();
                  setupDeleteAntennaItemLink();
              }
          });
          return false;
      });
    };
    setupAddAntennaBtn();

    // アンテナの削除
    var setupDeleteAntennaLink = function() {
        $j('.delete_antenna_link')
        .click(function() {
              if (!confirm('本当に削除しますか?')) {
                  return;
              }
              var antenna_id = this.id.split('_')[3];
              var delete_antenna_url = relative_url_root + "/mypage/delete_antenna";
              $j.ajax({
                  type: 'POST',
                  url: delete_antenna_url,
                  data: { antenna_id: antenna_id, authenticity_token: $j('#authenticity_token').val() },
                  success: function(request) {
                      $j('#antennas_list_container').html(request).highlight();
                  },
                  error: function(event){
                      alert("通信に失敗しました");
                  },
                  complete: function(request) {
                      setupDeleteAntennaLink();
                      setupDeleteAntennaItemLink();
                  }
              });
              return false;
        });
    };
    setupDeleteAntennaLink();

    // アンテナアイテムの削除
    var setupDeleteAntennaItemLink = function() {
        $j('.delete_antenna_item_link')
        .click(function() {
            if (!confirm('本当に削除しますか?')) {
                return;
            }
            var antenna_id = this.id.split('_')[4];
            var antenna_item_id = this.id.split('_')[5];
            var delete_antenna_item_url = relative_url_root + "/mypage/delete_antenna_item";
            $j.ajax({
                type: 'POST',
                url: delete_antenna_item_url,
                data: { antenna_id: antenna_id,
                        antenna_item_id: antenna_item_id,
                        authenticity_token: $j('#authenticity_token').val() },
                success: function(request) {
                    $j('#antennas_list_container').html(request).highlight();
                },
                error: function(event){
                    alert("通信に失敗しました");
                },
                complete: function(request) {
                    setupDeleteAntennaLink();
                    setupDeleteAntennaItemLink();
                }
            });
        });
    };
    setupDeleteAntennaItemLink();

    // アンテナのソート
    $j('#antennas_list')
    .sortable({
        axis: 'y',
        update: function(ev, ui) {
        // ソート先のアンテナIDとソート元のアンテナIDが取得できれば
        // sortAntenna(ソート先のアンテナID, ソート元のアンテナID);
        // とすればいいが、ソート先のアンテナIDを取得する手段がない。
        // /mypage/sort_antennaの処理を見直して、ソート元のアンテナID
        // と何番目になったのかの情報で並び替えれるようにすればいけそうだ。
        }
    });

    // アンテナアイテムの張替え
    $j('.antenna')
    .droppable({
        hoverclass: "dragenter",
        accept: '.antenna_item',
        drop: function(ev, ui) {
                  var antenna_id = this.id.split('_')[1];
                  var antenna_item_id = ui.draggable.attr('id').split('_')[2];
                  $j(this).children('#antenna_items_list').append(ui.draggable);
                  moveAntennaItem(antenna_id, antenna_item_id);
              }
    });
    $j('.antenna_item').draggable({revert: true});
});
</script>
